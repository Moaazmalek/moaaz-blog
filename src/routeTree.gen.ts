/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as PostIndexImport } from './routes/post/index'
import { Route as PostPostIdImport } from './routes/post/$postId'
import { Route as EditEditIdImport } from './routes/edit/$editId'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PostIndexRoute = PostIndexImport.update({
  path: '/post/',
  getParentRoute: () => rootRoute,
} as any)

const PostPostIdRoute = PostPostIdImport.update({
  path: '/post/$postId',
  getParentRoute: () => rootRoute,
} as any)

const EditEditIdRoute = EditEditIdImport.update({
  path: '/edit/$editId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/edit/$editId': {
      id: '/edit/$editId'
      path: '/edit/$editId'
      fullPath: '/edit/$editId'
      preLoaderRoute: typeof EditEditIdImport
      parentRoute: typeof rootRoute
    }
    '/post/$postId': {
      id: '/post/$postId'
      path: '/post/$postId'
      fullPath: '/post/$postId'
      preLoaderRoute: typeof PostPostIdImport
      parentRoute: typeof rootRoute
    }
    '/post/': {
      id: '/post/'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/edit/$editId': typeof EditEditIdRoute
  '/post/$postId': typeof PostPostIdRoute
  '/post': typeof PostIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/edit/$editId': typeof EditEditIdRoute
  '/post/$postId': typeof PostPostIdRoute
  '/post': typeof PostIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/edit/$editId': typeof EditEditIdRoute
  '/post/$postId': typeof PostPostIdRoute
  '/post/': typeof PostIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/edit/$editId' | '/post/$postId' | '/post'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/edit/$editId' | '/post/$postId' | '/post'
  id: '__root__' | '/' | '/about' | '/edit/$editId' | '/post/$postId' | '/post/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  EditEditIdRoute: typeof EditEditIdRoute
  PostPostIdRoute: typeof PostPostIdRoute
  PostIndexRoute: typeof PostIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  EditEditIdRoute: EditEditIdRoute,
  PostPostIdRoute: PostPostIdRoute,
  PostIndexRoute: PostIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/edit/$editId",
        "/post/$postId",
        "/post/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/edit/$editId": {
      "filePath": "edit/$editId.tsx"
    },
    "/post/$postId": {
      "filePath": "post/$postId.tsx"
    },
    "/post/": {
      "filePath": "post/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
